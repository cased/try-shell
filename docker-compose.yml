networks:
  frontend: {}
  backend: {}

services:
  try-shell:
    # switch to :latest once https://github.com/cased/cased/pull/1469 is included in a release
    image: ghcr.io/cased/shell:unstable
    pull_policy: always
    depends_on:
      - jump
    environment:
      - CASED_SHELL_HOST_FILE=/opt/cased/tmp/jump.json
      - CASED_SHELL_TLS=off
      - CASED_SHELL_HOSTNAME=${CASED_SHELL_HOSTNAME:?hostname_required}
      - CASED_SHELL_SECRET=${CASED_SHELL_SECRET:?secret_required}
      - CASED_SHELL_PORT=${CASED_SHELL_PORT:?port_required}
      # validate here even though we don't use them in the app
      - UNUSED_PUBLIC_KEY=${AUTHORIZED_KEY:?key_required}
    networks:
      - frontend
      - backend
    ports:
      - "${CASED_SHELL_PORT:?port_required}:${CASED_SHELL_PORT:?port_required}"
    volumes:
      - shared:/opt/cased/tmp
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "http://${CASED_SHELL_HOSTNAME:?hostname_required}/_ping",
        ]
      interval: 1s
      timeout: 1s
      retries: 3
      start_period: 1s

  jump:
    entrypoint:
      ["/bin/app", "/opt/cased/tmp/jump.yaml", "/opt/cased/tmp/jump.json"]
    image: ghcr.io/cased/jump:latest
    restart: on-failure
    pull_policy: always
    depends_on:
      jump-config:
        condition: service_healthy
    volumes:
      - shared:/opt/cased/tmp

  jump-config:
    image: busybox
    command:
      - /bin/sh
      - -c
      - |
        cat << EOF > /opt/cased/tmp/jump.yaml
        queries:
          - provider: static
            prompt:
              featured: true
              hostname: demo-bastion-server
              username: sshuser
              port: 2222
              labels:
                app: bastion
          - provider: static
            prompt:
              featured: true
              hostname: demo-app-server
              username: sshuser
              port: 2222
              labels:
                app: app
              proxyJumpSelector:
                app: bastion
        EOF
        touch /done
        tail -F /does-not-exist 2>/dev/null
    restart: on-failure
    init: true
    volumes:
      - shared:/opt/cased/tmp
    healthcheck:
      test: ["CMD", "test", "-f", "/done"]
      interval: 1s
      timeout: 1s
      retries: 3
      start_period: 1s

  ssh-config:
    image: busybox
    command:
      - /bin/sh
      - -c
      - |
        cat << EOF > /config/custom-cont-init.d/88-cased
        #!/usr/bin/with-contenv bash

        sed -i 's@AllowTcpForwarding no@AllowTcpForwarding yes@' /etc/ssh/sshd_config

        touch /done
        EOF
        chmod a+x /config/custom-cont-init.d/88-cased
        touch /done
        tail -F /does-not-exist 2>/dev/null
    restart: on-failure
    init: true
    volumes:
      - custom-ssh-init:/config/custom-cont-init.d
    healthcheck:
      test: ["CMD", "test", "-f", "/done"]
      interval: 1s
      timeout: 1s
      retries: 3
      start_period: 1s

  demo-bastion-server:
    image: linuxserver/openssh-server
    init: true
    depends_on:
      try-shell:
        condition: service_healthy
      ssh-config:
        condition: service_healthy
    networks:
      - frontend
      - backend
    expose:
      - 2222
    command:
      - /bin/sh
      - -c
      - |
        echo "Welcome to the bastion server" > /etc/motd
        mkdir -p /home/$$USER_NAME
        cp -r /config/.ssh /home/$$USER_NAME/
        chown -R $$USER_NAME:$$USER_NAME /home/$$USER_NAME
        usermod -d /home/$$USER_NAME $$USER_NAME
        echo example > /home/$$USER_NAME/example.txt
        chown $$USER_NAME /home/$$USER_NAME/example.txt
        tail -F /does-not-exist 2>/dev/null
    environment:
      - PASSWORD_ACCESS=false
      - PUBLIC_KEY=${AUTHORIZED_KEY:?key_required}
      - SUDO_ACCESS=true
      - USER_NAME=sshuser
    volumes:
      - custom-ssh-init:/config/custom-cont-init.d
    healthcheck:
      test: ["CMD", "test", "-f", "/done"]
      interval: 1s
      timeout: 1s
      retries: 3
      start_period: 1s

  demo-app-server:
    image: linuxserver/openssh-server
    init: true
    depends_on:
      try-shell:
        condition: service_healthy
      ssh-config:
        condition: service_healthy
    command:
      - /bin/sh
      - -c
      - |
        echo "Welcome to the app server" > /etc/motd
        mkdir -p /home/$$USER_NAME
        cp -r /config/.ssh /home/$$USER_NAME/
        chown -R $$USER_NAME:$$USER_NAME /home/$$USER_NAME
        usermod -d /home/$$USER_NAME $$USER_NAME
        echo example > /home/$$USER_NAME/example.txt
        chown $$USER_NAME /home/$$USER_NAME/example.txt
        tail -F /does-not-exist 2>/dev/null
    networks:
      - backend
    expose:
      - 2222
    environment:
      - PASSWORD_ACCESS=false
      - PUBLIC_KEY=${AUTHORIZED_KEY:?key_required}
      - SUDO_ACCESS=true
      - USER_NAME=sshuser
    volumes:
      - custom-ssh-init:/config/custom-cont-init.d
    healthcheck:
      test: ["CMD", "test", "-f", "/done"]
      interval: 1s
      timeout: 1s
      retries: 3
      start_period: 1s

  # Print usage instructions once all containers have been started
  usage:
    image: busybox
    init: true
    depends_on:
      demo-app-server:
        condition: service_healthy
      demo-bastion-server:
        condition: service_healthy
    command:
      - /bin/sh
      - -c
      - |
        sleep 3
        echo "Visit http://${CASED_SHELL_HOSTNAME} to try out Cased Shell!"
        tail -F /does-not-exist 2>/dev/null

volumes:
  shared: {}
  custom-ssh-init: {}
